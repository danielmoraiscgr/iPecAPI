{"version":3,"sources":["./src/app/pages/totalizacao/totalizacao.page.html","./src/app/pages/totalizacao/totalizacao.module.ts","./src/app/pages/totalizacao/totalizacao.page.scss","./src/app/pages/totalizacao/totalizacao.page.ts"],"names":[],"mappings":"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","file":"pages-totalizacao-totalizacao-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar> \\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title text=center>Calc por Data de Manejo</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Data Inicial</ion-label>\\n        <ion-datetime displayformat=\\\"dd/MM/yyyy\\\" name=\\\"datainicial_manejo\\\" min=\\\"2019\\\" max=\\\"2030-01-01\\\" [(ngModel)]=\\\"datainicial\\\"></ion-datetime>\\n      </ion-item>\\n    \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Data Final</ion-label>\\n        <ion-datetime displayformat=\\\"dd/MM/yyyy\\\" name=\\\"datafinal_manejo\\\" min=\\\"2019\\\" max=\\\"2030-01-01\\\" [(ngModel)]=\\\"datafinal\\\"></ion-datetime>\\n      </ion-item>\\n\\n      <ion-item>\\n          <ion-label position=\\\"floating\\\">Tipo Manejo</ion-label>\\n          <ion-select name=\\\"idtipomanejo\\\"  [(ngModel)]=\\\"id_tipomanejo\\\" okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n           <ion-select-option *ngFor=\\\"let tipomanejo of tipomanejos\\\" value={{tipomanejo.id}}>{{tipomanejo.nome}}</ion-select-option>\\n          </ion-select> \\n        </ion-item>\\n    \\n      <ion-item>\\n          <ion-label position=\\\"floating\\\">Produtor</ion-label>\\n          <ion-select (blur)=\\\"onBlur(getFazendas(id_produtor))\\\" name=\\\"idprodutor\\\"  [(ngModel)]=\\\"id_produtor\\\" okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n           <ion-select-option *ngFor=\\\"let produtor of produtores\\\" value={{produtor.id}}>{{produtor.nome}}</ion-select-option>\\n          </ion-select> \\n        </ion-item>\\n    \\n        <ion-item>\\n            <ion-label position=\\\"floating\\\">Fazenda</ion-label>\\n            <ion-select name=\\\"idfazenda\\\"  [(ngModel)]=\\\"id_fazenda\\\" okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n             <ion-select-option *ngFor=\\\"let fazenda of fazendas\\\" value={{fazenda.id}}>{{fazenda.nome}}</ion-select-option>\\n            </ion-select> \\n          </ion-item>\\n\\n          <ion-button expand=\\\"full\\\" (click)=\\\"totalManejoDia()\\\"> Executar Calculo  </ion-button>\\n          <ion-button expand=\\\"full\\\" (click)=\\\"clearfields()\\\"> Limpar campos  </ion-button>\\n     \\n\\n          <ion-item-sliding *ngFor=\\\"let totalizacao of totalmanejo\\\">\\n          <ion-item>\\n              <ion-label text-wrap>\\n                  <h3> Data           : {{ totalizacao.data | date: 'dd/MM/yyyy'  }} </h3>\\n                  <h3> Tipo de Manejo : {{ totalizacao.nometipomanejo }}</h3>           \\n                  <h3> Produtor       : {{ totalizacao.nomeprodutor }}</h3>\\n                  <h3> Fazenda        : {{ totalizacao.nomefazenda }}</h3>\\n                  <h3> Categoria      : {{ totalizacao.nomecategoria }}</h3>\\n                  <h3> Raça           : {{ totalizacao.nomeraca }}</h3>\\n                  <h3> Aparte         : {{ totalizacao.nomeaparte }}</h3>              \\n                  <h3> Total          : {{ totalizacao.totalmanejo}} </h3>\\n                  <h3> Média          : {{ totalizacao.mediapeso | number}} </h3>     \\n          </ion-label>\\n          </ion-item>    \\n          </ion-item-sliding> \\n</ion-content>\\n<ion-footer *ngFor=\\\"let total of totalpeso\\\">\\n  <ion-toolbar>\\n    <ion-title>Total : {{total.totalmanejo}}  Média(kg) :  {{total.mediapeso  | number }} </ion-title>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TotalizacaoPage } from './totalizacao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TotalizacaoPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TotalizacaoPage]\n})\nexport class TotalizacaoPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RvdGFsaXphY2FvL3RvdGFsaXphY2FvLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SQLite , SQLiteObject} from '@ionic-native/sqlite/ngx';\n\n@Component({\n  selector: 'app-totalizacao',\n  templateUrl: './totalizacao.page.html',\n  styleUrls: ['./totalizacao.page.scss'],  \n})\n\n\nexport class TotalizacaoPage implements OnInit {\n\n  databaseObj: SQLiteObject;\n  readonly database_name:string = \"ipedDB\"; // DB name\n  public datainicial:Date;\n  public datafinal:Date;\n  public id_tipomanejo:number=0; \n  public id_produtor:number=0; \n  public id_fazenda:number=0; \n  public totalpeso:any=[];\n  \n  row_data: any = []; \n  totalmanejo: any = [];\n  tipomanejos: any =[];\n  produtores: any = [];\n  fazendas: any = [];\n\n   constructor(private sqlite:SQLite) { }\n\n   \n  createDB() {\n\n    this.sqlite.create({\n       name: this.database_name,\n       location: 'default'\n     })\n       .then((db: SQLiteObject) => {\n         this.databaseObj = db;\n         this.createTable();\n       })\n       .catch(e => {\n         alert(\"error \" + JSON.stringify(e))\n       });\n }\n\n  createTable() {\n  this.databaseObj.sqlBatch([\n    ['CREATE TABLE IF NOT EXISTS animal (id integer primary key AUTOINCREMENT NOT NULL, identanimal TEXT NOT NULL, id_produtor integer NOT NULL, id_fazenda intger NOT NULL, id_categoria integer NOT NULL, id_raca integer NOT NULL, ativo integer NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS produtor (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, email TEXT NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS fazenda (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, id_produtor integer)'],\n    ['CREATE TABLE IF NOT EXISTS categoria (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, sexo TEXT NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS raca (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS manejo (id integer primary key AUTOINCREMENT NOT NULL, id_produtor integer NOT NULL, id_fazenda integer NOT NULL, data date NOT NULL, id_tipomanejo integer NOT NULL, identanimal varchar(15) NOT NULL, id_categoria integer NOT NULL, id_raca integer NOT NULL, peso REAL NOT NULL, id_aparte NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS aparte (id integer primary key AUTOINCREMENT NOT NULL, id_tipomanejo integer NOT NULL, nome TEXT NOT NULL, pesoinicial integer NOT NULL, pesofinal integer NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS tipomanejo (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL)']  \n \n  ])\n    .then(() => {\n      this.getTipoManejos();\n      this.getProdutores();\n      //this.totalManejoDia();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\ntotalManejoDia(){\n  this.databaseObj.executeSql(\"SELECT manejo.data,manejo.id_tipomanejo,tipomanejo.nome as nometipomanejo,manejo.id_produtor,produtor.nome as nomeprodutor,manejo.id_fazenda,fazenda.nome as nomefazenda,manejo.id_categoria,categoria.nome as nomecategoria,manejo.id_raca,raca.nome as nomeraca,manejo.id_aparte,aparte.nome as nomeaparte,count(*) as totalmanejo,avg(manejo.peso) as mediapeso from manejo , produtor, tipomanejo, fazenda, categoria, raca, aparte where manejo.id_produtor=produtor.id and manejo.id_fazenda=fazenda.id and manejo.id_categoria=categoria.id and manejo.id_raca=raca.id and manejo.id_aparte=aparte.id and manejo.id_tipomanejo=tipomanejo.id  group by manejo.data,manejo.id_tipomanejo,tipomanejo.nome,manejo.id_produtor,produtor.nome,manejo.id_fazenda,fazenda.nome,manejo.id_categoria,categoria.nome,manejo.id_raca,raca.nome,manejo.id_aparte,aparte.nome\", [])\n  .then((res) => {\n    this.totalmanejo = [];\n    if (res.rows.length > 0) {\n      for (var i = 0; i < res.rows.length; i++) {\n        this.totalmanejo.push(res.rows.item(i));\n      }\n    }\n    this.totalmediapeso();\n  })\n  .catch(e => {\n    alert(\"error \" + JSON.stringify(e))\n  });\n}\n\ntotalmediapeso(){\n  this.databaseObj.executeSql(\"SELECT count(*) as totalmanejo,avg(manejo.peso) as mediapeso from manejo \", [])\n  .then((res) => {\n    this.totalpeso = [];\n    if (res.rows.length > 0) {\n      for (var i = 0; i < res.rows.length; i++) {\n        this.totalpeso.push(res.rows.item(i));\n      }\n    }\n  })\n  .catch(e => {\n    alert(\"error \" + JSON.stringify(e))\n  });\n\n}\n\n\ngetTipoManejos() {\n  this.databaseObj.executeSql(\"SELECT * FROM tipomanejo\",[])\n    .then((res) => {\n      this.tipomanejos = [];\n      if (res.rows.length > 0) {\n        for (var i = 0; i < res.rows.length; i++) {\n          this.tipomanejos.push(res.rows.item(i));\n        }\n        }\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\ngetProdutores() {\n  this.databaseObj.executeSql(\"SELECT * FROM produtor\",[])\n    .then((res) => {\n      this.produtores = [];\n      if (res.rows.length > 0) {\n        for (var i = 0; i < res.rows.length; i++) {\n          this.produtores.push(res.rows.item(i));\n        }\n        }\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\ngetFazendas(id_produtor) {\n  this.databaseObj.executeSql(\"SELECT * FROM fazenda where id_produtor=?\",[this.id_produtor])\n    .then((res) => {\n      this.fazendas = [];\n      if (res.rows.length > 0) {\n        for (var i = 0; i < res.rows.length; i++) {\n          this.fazendas.push(res.rows.item(i));\n        }\n        }\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\nclearfields(){\n  this.id_produtor=0; \n  this.id_fazenda=0; \n  this.totalmanejo = [];\n\n}\n  \n  diaAtual(){\n    //let datamanejo=this.datepipe.transform(this.data, 'MM/dd/yyyy');\n    console.log(this.dataHoje())\n  }\n  \n  dataHoje() {\n    var dataatual = new Date();\n    var dia = dataatual.getDate();\n    var mes = dataatual.getMonth() + 1;\n    var ano = dataatual.getFullYear();\n    return [dia, mes, ano].join('/');\n  }\n\n  ngOnInit() {\n    this.createDB();\n}\n\n\n}\n"],"sourceRoot":""}