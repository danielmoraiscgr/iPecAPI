{"version":3,"sources":["./src/app/saldoporcategoria/saldoporcategoria.page.html","./src/app/saldoporcategoria/saldoporcategoria.module.ts","./src/app/saldoporcategoria/saldoporcategoria.page.scss","./src/app/saldoporcategoria/saldoporcategoria.page.ts"],"names":[],"mappings":"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","file":"saldoporcategoria-saldoporcategoria-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar> \\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title text=center>Saldo por Categoria</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n   \\n      <ion-item>\\n          <ion-label position=\\\"floating\\\">Produtor</ion-label>\\n          <ion-select (blur)=\\\"onBlur(getFazendas(id_produtor))\\\" name=\\\"idprodutor\\\"  [(ngModel)]=\\\"id_produtor\\\" okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n           <ion-select-option *ngFor=\\\"let produtor of produtores\\\" value={{produtor.id}}>{{produtor.nome}}</ion-select-option>\\n          </ion-select> \\n        </ion-item>\\n    \\n        <ion-item>\\n            <ion-label position=\\\"floating\\\">Fazenda</ion-label>\\n            <ion-select name=\\\"idfazenda\\\"  [(ngModel)]=\\\"id_fazenda\\\" okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n             <ion-select-option *ngFor=\\\"let fazenda of fazendas\\\" value={{fazenda.id}}>{{fazenda.nome}}</ion-select-option>\\n            </ion-select> \\n          </ion-item>\\n\\n          <ion-button expand=\\\"full\\\" (click)=\\\"saldoporCategoria()\\\"> Calcular Saldos  </ion-button>\\n          <ion-button expand=\\\"full\\\" (click)=\\\"clearfields()\\\"> Limpar campos  </ion-button>\\n\\n          <ion-item-sliding *ngFor=\\\"let totalizacao of saldoporcategorias\\\">\\n          <ion-item>\\n              <ion-label text-wrap>\\n                  <h3> Categoria        : {{ totalizacao.nomecategoria }}</h3>\\n                  <h3> Saldo de cabe√ßas : {{ totalizacao.totalcab}} </h3>\\n          </ion-label>\\n          </ion-item>    \\n          </ion-item-sliding> \\n\\n</ion-content>\\n<ion-footer *ngFor=\\\"let total of totalcabs\\\">\\n  <ion-toolbar>\\n    <ion-title>Total : {{total.totalanimais}}  </ion-title>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SaldoporcategoriaPage } from './saldoporcategoria.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SaldoporcategoriaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SaldoporcategoriaPage]\n})\nexport class SaldoporcategoriaPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbGRvcG9yY2F0ZWdvcmlhL3NhbGRvcG9yY2F0ZWdvcmlhLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SQLite , SQLiteObject} from '@ionic-native/sqlite/ngx';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-saldoporcategoria',\n  templateUrl: './saldoporcategoria.page.html',\n  styleUrls: ['./saldoporcategoria.page.scss'],\n})\nexport class SaldoporcategoriaPage implements OnInit {\n\n\n  databaseObj: SQLiteObject;\n  readonly database_name:string = \"ipedDB\"; // DB name\n  public id_produtor:number=0; \n  public id_fazenda:number=0; \n\n  saldoporcategorias: any = [];\n  totalcabs: any [];\n  produtores: any = [];\n  fazendas: any = [];\n\n   constructor(private sqlite:SQLite, private toastCtrl: ToastController) { }\n   \n  createDB() {\n\n    this.sqlite.create({\n       name: this.database_name,\n       location: 'default'\n     })\n       .then((db: SQLiteObject) => {\n         this.databaseObj = db;\n         this.createTable();\n       })\n       .catch(e => {\n         alert(\"error \" + JSON.stringify(e))\n       });\n }\n\n  createTable() {\n  this.databaseObj.sqlBatch([\n    ['CREATE TABLE IF NOT EXISTS animal (id integer primary key AUTOINCREMENT NOT NULL, identanimal TEXT NOT NULL, id_produtor integer NOT NULL, id_fazenda intger NOT NULL, id_categoria integer NOT NULL, id_raca integer NOT NULL, ativo integer NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS produtor (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, email TEXT NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS fazenda (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, id_produtor integer)'],\n    ['CREATE TABLE IF NOT EXISTS categoria (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, sexo TEXT NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS raca (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS manejo (id integer primary key AUTOINCREMENT NOT NULL, id_produtor integer NOT NULL, id_fazenda integer NOT NULL, data date NOT NULL, id_tipomanejo integer NOT NULL, identanimal varchar(15) NOT NULL, id_categoria integer NOT NULL, id_raca integer NOT NULL, peso REAL NOT NULL, id_aparte NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS aparte (id integer primary key AUTOINCREMENT NOT NULL, id_tipomanejo integer NOT NULL, nome TEXT NOT NULL, pesoinicial integer NOT NULL, pesofinal integer NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS tipomanejo (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL)']  \n \n  ])\n    .then(() => {\n      this.getProdutores();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\nsaldoporCategoria(){\n  this.databaseObj.executeSql(\"SELECT animal.id_categoria,categoria.nome as nomecategoria,count(*) as totalcab from animal,categoria where animal.id_produtor=? and animal.id_fazenda=? and animal.id_categoria=categoria.id  group by animal.id_categoria,categoria.nome\", [this.id_produtor,this.id_fazenda])\n  .then((res) => {\n    this.saldoporcategorias = [];\n    if (res.rows.length > 0) {\n      for (var i = 0; i < res.rows.length; i++) {\n        this.saldoporcategorias.push(res.rows.item(i));\n      }\n    }\n    this.totalanimais();\n    let toast = this.toastCtrl.create({\n      message: 'Calculo realizado ! ',\n      duration: 3000,\n      position: 'top'\n    });\n\n  })\n  .catch(e => {\n    alert(\"error \" + JSON.stringify(e))\n  });\n}\n\ntotalanimais(){\n  this.databaseObj.executeSql(\"SELECT count(*) as totalanimais from animal where  animal.id_produtor=? and animal.id_fazenda=?\", [this.id_produtor,this.id_fazenda])\n  .then((res) => {\n    this.totalcabs = [];\n    if (res.rows.length > 0) {\n      for (var i = 0; i < res.rows.length; i++) {\n        this.totalcabs.push(res.rows.item(i));\n      }\n    }\n  })\n  .catch(e => {\n    alert(\"error \" + JSON.stringify(e))\n  });\n\n}\n\ngetProdutores() {\n  this.databaseObj.executeSql(\"SELECT * FROM produtor\",[])\n    .then((res) => {\n      this.produtores = [];\n      if (res.rows.length > 0) {\n        for (var i = 0; i < res.rows.length; i++) {\n          this.produtores.push(res.rows.item(i));\n        }\n        }\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\ngetFazendas(id_produtor) {\n  this.databaseObj.executeSql(\"SELECT * FROM fazenda where id_produtor=?\",[this.id_produtor])\n    .then((res) => {\n      this.fazendas = [];\n      if (res.rows.length > 0) {\n        for (var i = 0; i < res.rows.length; i++) {\n          this.fazendas.push(res.rows.item(i));\n        }\n        }\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\n  \nclearfields(){\n    this.id_produtor=0; \n    this.id_fazenda=0; \n    this.saldoporcategorias = [];\n\n}\n\n  ngOnInit() {\n    this.createDB();\n}\n\n\n}\n"],"sourceRoot":""}