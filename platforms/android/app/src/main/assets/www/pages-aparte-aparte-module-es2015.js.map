{"version":3,"sources":["./src/app/pages/aparte/aparte.page.html","./src/app/pages/aparte/aparte.module.ts","./src/app/pages/aparte/aparte.page.scss","./src/app/pages/aparte/aparte.page.ts"],"names":[],"mappings":"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","file":"pages-aparte-aparte-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title text=center>Cadastro de Apartes</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n <ion-card>\\n    <ion-input hidden [(ngModel)]=\\\"id\\\"></ion-input>\\n  \\n<ion-item>\\n    <ion-label position=\\\"floating\\\">Tipo Manejo </ion-label>\\n    <ion-select name=\\\"idtipomanejo\\\"  [(ngModel)]=\\\"id_tipomanejo\\\"  okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n     <ion-select-option *ngFor=\\\"let tipomanejo of tipomanejos\\\" value={{tipomanejo.id}}>{{tipomanejo.nome}}</ion-select-option>\\n    </ion-select> \\n  </ion-item>\\n<ion-item>\\n<ion-label position=\\\"floating\\\">Nome Aparte</ion-label>\\n<ion-input [(ngModel)]=\\\"nome\\\"></ion-input>\\n</ion-item>\\n\\n<ion-item>\\n    <ion-label position=\\\"floating\\\">Peso inicial</ion-label>\\n    <ion-input [(ngModel)]=\\\"pesoinicial\\\"></ion-input>\\n</ion-item>\\n\\n<ion-item>\\n    <ion-label position=\\\"floating\\\">Peso final</ion-label>\\n    <ion-input [(ngModel)]=\\\"pesofinal\\\"></ion-input>\\n</ion-item>\\n</ion-card>\\n<ion-card>\\n<ion-button expand=\\\"full\\\" (click)=\\\"save()\\\"> Salvar </ion-button>\\n<ion-button expand=\\\"full\\\" (click)=\\\"clearfields()\\\"> Limpar </ion-button>\\n</ion-card>\\n<ion-list>\\n\\n<ion-list-header>\\n   <ion-label> \\n        Listagem\\n   </ion-label>\\n</ion-list-header>\\n<ion-card>\\n<ion-item-sliding *ngFor=\\\"let item of row_data\\\">\\n <ion-item>\\n     <ion-label text-wrap>\\n         <h3> Tipo Manejo  : {{ item.nometipomanejo }}</h3>\\n         <h3> Nome Aparte  : {{ item.nome }}</h3>\\n         <h3> Peso Inicial : > = {{ item.pesoinicial }} </h3>\\n         <h3> Peso Final   : < = {{ item.pesofinal }}</h3>\\n          \\n     </ion-label>\\n </ion-item>    \\n <ion-item-options side=\\\"end\\\">\\n      <ion-item-option color=\\\"secondary\\\" (click)=\\\"update(item)\\\">Alterar</ion-item-option>\\n      <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item)\\\">Excluir</ion-item-option>         \\n </ion-item-options>\\n</ion-item-sliding>\\n</ion-card>\\n</ion-list>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ApartePage } from './aparte.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ApartePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ApartePage]\n})\nexport class ApartePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FwYXJ0ZS9hcGFydGUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SQLiteObject, SQLite } from '@ionic-native/sqlite/ngx';\n\n@Component({\n  selector: 'app-aparte',\n  templateUrl: './aparte.page.html',\n  styleUrls: ['./aparte.page.scss'],\n})\nexport class ApartePage implements OnInit {\n\n\n  databaseObj: SQLiteObject; // Database instance object\n  public id:number=0;\n  public nome:string=\"\";\n  public id_tipomanejo:number;\n  public pesoinicial:number=0; \n  public pesofinal:number=0; \n  \n  row_data: any = []; // Table rows\n  tipomanejos: any = []; \n\n  readonly database_name:string = \"ipedDB\"; // DB name\n  readonly table_name:string = \"aparte\"; // Table name\n\n\n  constructor(private sqlite:SQLite) { }\n\n  createDB() {\n\n    this.sqlite.create({\n       name: this.database_name,\n       location: 'default'\n     })\n       .then((db: SQLiteObject) => {\n         this.databaseObj = db;\n         this.createTable();\n       })\n       .catch(e => {\n         alert(\"error \" + JSON.stringify(e))\n       });\n }\n\n  createTable() {\n  this.databaseObj.sqlBatch([\n    ['CREATE TABLE IF NOT EXISTS aparte (id integer primary key AUTOINCREMENT NOT NULL, id_tipomanejo integer NOT NULL, nome TEXT NOT NULL, pesoinicial integer NOT NULL, pesofinal integer NOT NULL)'],\n    ['CREATE TABLE IF NOT EXISTS tipomanejo (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL)'],\n    ])\n    .then(() => {\n      this.getAll();\n      this.getTipoManejo();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n \n\nsave() {\n  if (!this.nome.length) {\n    alert(\"Entre com o nome do Aparte !\");\n    return;\n  }\n  if (this.id_tipomanejo==0) {\n    alert(\"Entre com o Tipo de Manejo !\");\n    return;\n  }\n  if (this.pesoinicial==0) {\n    alert(\"Entre com o Peso Inicial do Aparte !\");\n    return;\n  }\n  if (this.pesofinal==0) {\n    alert(\"Entre com o Peso Final !\");\n    return;\n  }\n\n\n  if(this.id!=0) {\n    this.databaseObj.executeSql('UPDATE ' + this.table_name + ' set nome=?,id_tipomanejo=?,pesoinicial=?,pesofinal=? where id=?',[this.nome,this.id_tipomanejo,this.pesoinicial,this.pesofinal])\n    .then(() => {\n         alert('Aparte Atualizado !');\n         this.nome=\"\";\n         this.id_tipomanejo=0; \n         this.pesoinicial=0;\n         this.pesofinal=0;\n         this.getAll();\n        })\n       .catch(e => {\n         alert(\"error \" + JSON.stringify(e))\n       });\n      } else  {\n        this.databaseObj.executeSql('INSERT INTO ' + this.table_name + ' (nome,id_tipomanejo,pesoinicial,pesofinal) VALUES (?,?,?,?)',[this.nome,this.id_tipomanejo,this.pesoinicial,this.pesofinal])\n        .then(() => {\n             alert('Aparte Inserido !');\n             this.nome=\"\";\n             this.id_tipomanejo=0; \n             this.pesoinicial=0;\n             this.pesofinal=0;\n             this.getAll();\n            })\n           .catch(e => {\n             alert(\"error \" + JSON.stringify(e))\n           });\n      }\n    }\n  \n\n  getAll() {\n    this.databaseObj.executeSql(\"SELECT aparte.id,aparte.nome,aparte.pesoinicial,aparte.pesofinal,tipomanejo.nome as nometipomanejo FROM aparte, tipomanejo where aparte.id_tipomanejo=tipomanejo.id\", [])\n      .then((res) => {\n        this.row_data = [];\n        if (res.rows.length > 0) {\n          for (var i = 0; i < res.rows.length; i++) {\n            this.row_data.push(res.rows.item(i));\n          }\n        }\n      })\n      .catch(e => {\n        alert(\"error \" + JSON.stringify(e))\n      });\n  }\n\n  getTipoManejo() {\n    this.databaseObj.executeSql(\"SELECT * FROM tipomanejo \", [])\n      .then((res) => {\n        this.tipomanejos = [];\n        if (res.rows.length > 0) {\n          for (var i = 0; i < res.rows.length; i++) {\n            this.tipomanejos.push(res.rows.item(i));\n          }\n        }\n      })\n      .catch(e => {\n        alert(\"error \" + JSON.stringify(e))\n      });\n  }\n\ndelete(item) {\n  this.databaseObj.executeSql(\"DELETE FROM \" + this.table_name + \" WHERE id = \" + item.id, [])\n    .then((res) => {\n      alert(\"Aparte removido !\");\n      this.getAll();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\nupdate(item) {\n  this.id = item.id;\n  this.nome = item.nome; \n  this.id_tipomanejo = item.id_tipomanejo;\n  this.pesoinicial = item.pesoinicial; \n  this.pesofinal = item.pesofinal; \n}\n \nclearfields(){\n  this.id = 0;\n  this.nome = \"\";\n}\n\nngOnInit() {\n     this.createDB();    \n  }\n}\n"],"sourceRoot":""}