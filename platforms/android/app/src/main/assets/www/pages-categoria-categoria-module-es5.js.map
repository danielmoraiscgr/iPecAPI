{"version":3,"sources":["./src/app/pages/categoria/categoria.page.html","./src/app/pages/categoria/categoria.module.ts","./src/app/pages/categoria/categoria.page.scss","./src/app/pages/categoria/categoria.page.ts"],"names":[],"mappings":"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","file":"pages-categoria-categoria-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title text=center>Categoria</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<!-- <ion-button expand=\\\"full\\\" (click)=\\\"createDB()\\\"> Criar Banco de Dados</ion-button> -->\\n<ion-content>\\n <ion-card> \\n<ion-input hidden readonly=\\\"true\\\" [(ngModel)]=\\\"id\\\"></ion-input>\\n<ion-item>\\n  <ion-label position=\\\"floating\\\">Id</ion-label>\\n  <ion-input [(ngModel)]=\\\"id\\\"></ion-input>\\n</ion-item>\\n\\n  <ion-item>\\n       <ion-label position=\\\"floating\\\">Nome</ion-label>\\n       <ion-input [(ngModel)]=\\\"nome\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n      <ion-label position=\\\"floating\\\">Sexo</ion-label>\\n      <ion-select name=\\\"sexo\\\"  [(ngModel)]=\\\"sexo\\\" okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n       <ion-select-option  value=\\\"Macho\\\">Macho</ion-select-option>\\n       <ion-select-option  value=\\\"Fêmea\\\">Fêmea</ion-select-option>\\n       </ion-select> \\n    </ion-item>\\n </ion-card>\\n <ion-card><\\n<ion-button expand=\\\"full\\\" (click)=\\\"save()\\\"> Salvar </ion-button>\\n<ion-button expand=\\\"full\\\" (click)=\\\"clearfields()\\\"> Limpar </ion-button>\\n </ion-card>\\n\\n <ion-list>\\n    <ion-list-header>\\n        <ion-label> \\n             Listagem\\n        </ion-label>\\n    </ion-list-header>\\n  <ion-card>\\n    <ion-item-sliding *ngFor=\\\"let item of row_data\\\">\\n      <ion-item>\\n          <ion-label text-wrap>\\n              <h3> Categoria : {{ item.nome }}</h3>\\n              <h3> Sexo : {{ item.sexo }}</h3>              \\n          </ion-label>\\n      </ion-item>    \\n      <ion-item-options side=\\\"end\\\">\\n           <ion-item-option color=\\\"secondary\\\" (click)=\\\"update(item)\\\">Alterar</ion-item-option>\\n           <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item)\\\">Excluir</ion-item-option>         \\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-card>\\n</ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CategoriaPage } from './categoria.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoriaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CategoriaPage]\n})\nexport class CategoriaPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpYS9jYXRlZ29yaWEucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\n\n@Component({\n  selector: 'app-categoria',\n  templateUrl: './categoria.page.html',\n  styleUrls: ['./categoria.page.scss'],\n})\nexport class CategoriaPage implements OnInit {\n\n  databaseObj: SQLiteObject; // Database instance object\n  public id:number=0;\n  public nome:string=\"\";\n  public sexo:string=\"\";\n  \n  row_data: any = []; // Table rows\n  readonly database_name:string = \"ipedDB\"; // DB name\n  readonly table_name:string = \"categoria\"; // Table name\n\n\n  constructor(private sqlite: SQLite){\n        \n  }\n  \n  createDB() {\n\n    this.sqlite.create({\n       name: this.database_name,\n       location: 'default'\n     })\n       .then((db: SQLiteObject) => {\n         this.databaseObj = db;\n         this.createTable();\n       })\n       .catch(e => {\n         alert(\"error \" + JSON.stringify(e))\n       });\n }\n\n  createTable() {\n  this.databaseObj.executeSql('CREATE TABLE IF NOT EXISTS categoria (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, sexo TEXT NOT NULL)', [])\n    .then(() => {\n      this.getAll();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n \nsave() {\n\n  if (!this.nome.length) {\n    alert(\"Entre com o nome da Categoria !\");\n    return;\n  }\n  if (!this.sexo.length) {\n    alert(\"Entre com o sexo da Categoria !\");\n    return;\n  }\n\n  if(this.id!=0) {\n    this.databaseObj.executeSql('UPDATE ' + this.table_name + ' set nome=?,sexo=? where id=?',[this.nome,this.sexo,this.id])\n    .then(() => {\n         alert('Categoria Atualizada !');\n         this.id=0;\n         this.nome=\"\";\n         this.sexo=\"\";\n         this.getAll();\n        })\n       .catch(e => {\n         alert(\"error \" + JSON.stringify(e))\n       });\n      } else  {\n        this.databaseObj.executeSql('INSERT INTO ' + this.table_name + ' (nome,sexo) VALUES (?,?)',[this.nome,this.sexo])\n       .then(() => {\n             alert('Categoria Inserida !');\n             this.id=0;\n             this.nome=\"\";\n             this.sexo=\"\";\n             this.getAll();\n            })\n           .catch(e => {\n             alert(\"error \" + JSON.stringify(e))\n           });\n      }\n    }\n\n  getAll() {\n    this.databaseObj.executeSql(\"SELECT * FROM \" + this.table_name, [])\n      .then((res) => {\n        this.row_data = [];\n        if (res.rows.length > 0) {\n          for (var i = 0; i < res.rows.length; i++) {\n            this.row_data.push(res.rows.item(i));\n          }\n        }\n      })\n      .catch(e => {\n        alert(\"error \" + JSON.stringify(e))\n      });\n  }\n\ndelete(item) {\n  this.databaseObj.executeSql(\"DELETE FROM \" + this.table_name + \" WHERE id = \" + item.id, [])\n    .then((res) => {\n      alert(\"Categoria removida !\");\n      this.getAll();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\nupdate(item) {\n  this.id = item.id;\n  this.nome = item.nome; \n  this.sexo = item.sexo;\n}\n\nclearfields(){\n  this.id = 0;\n  this.nome = \"\";\n  this.sexo = \"\";\n}\n\n  ngOnInit() {\n   this.createDB();    \n  }\n\n}\n"],"sourceRoot":""}