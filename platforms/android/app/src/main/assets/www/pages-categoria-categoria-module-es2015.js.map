{"version":3,"sources":["./src/app/pages/categoria/categoria.page.html","./src/app/pages/categoria/categoria.module.ts","./src/app/pages/categoria/categoria.page.scss","./src/app/pages/categoria/categoria.page.ts"],"names":[],"mappings":"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","file":"pages-categoria-categoria-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title text=center>Categoria</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<!-- <ion-button expand=\\\"full\\\" (click)=\\\"createDB()\\\"> Criar Banco de Dados</ion-button> -->\\n<ion-content>\\n  \\n  <ion-item>\\n       <ion-label position=\\\"fixed\\\">Nome : </ion-label>\\n       <ion-input [(ngModel)]=\\\"nome\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n      <ion-label>Sexo : </ion-label>\\n      <ion-select name=\\\"sexo\\\"  [(ngModel)]=\\\"sexo\\\" okText=\\\"Ok\\\" cancelText=\\\"Voltar\\\">\\n       <ion-select-option  value=\\\"Macho\\\">Macho</ion-select-option>\\n       <ion-select-option  value=\\\"Fêmea\\\">Fêmea</ion-select-option>\\n       </ion-select> \\n    </ion-item>\\n\\n  <!-- <ion-list radio-group [(ngModel)]=\\\"sexo\\\">\\n      <ion-item>\\n        <ion-label>Macho</ion-label>\\n        <ion-radio value=\\\"Macho\\\" checked></ion-radio>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label>Femea</ion-label>\\n        <ion-radio value=\\\"Femea\\\"></ion-radio>\\n      </ion-item>\\n    </ion-list> -->\\n\\n\\n<ion-button expand=\\\"full\\\" (click)=\\\"add()\\\"> Salvar </ion-button>\\n\\n<ion-list>\\n\\n    <ion-list-header>\\n        <ion-label> \\n             Listagem\\n        </ion-label>\\n    </ion-list-header>\\n  \\n    <ion-item-sliding *ngFor=\\\"let item of row_data\\\">\\n      <ion-item>\\n          <ion-label text-wrap>\\n              <h3> Categoria : {{ item.nome }}</h3>\\n              <h3> Sexo : {{ item.sexo }}</h3>              \\n          </ion-label>\\n      </ion-item>    \\n      <ion-item-options side=\\\"end\\\">\\n           <ion-item-option color=\\\"secondary\\\" (click)=\\\"update(item)\\\">Altera</ion-item-option>\\n           <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item)\\\">Excluir</ion-item-option>         \\n      </ion-item-options>\\n    </ion-item-sliding>\\n</ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CategoriaPage } from './categoria.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoriaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CategoriaPage]\n})\nexport class CategoriaPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3JpYS9jYXRlZ29yaWEucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\n\n@Component({\n  selector: 'app-categoria',\n  templateUrl: './categoria.page.html',\n  styleUrls: ['./categoria.page.scss'],\n})\nexport class CategoriaPage implements OnInit {\n\n  databaseObj: SQLiteObject; // Database instance object\n  nome:string=\"\";\n  sexo:string=\"\";\n  \n  row_data: any = []; // Table rows\n  readonly database_name:string = \"ipedDB\"; // DB name\n  readonly table_name:string = \"categoria\"; // Table name\n\n\n  constructor(private sqlite: SQLite){\n        \n  }\n\n  \n  createDB() {\n\n    this.sqlite.create({\n       name: this.database_name,\n       location: 'default'\n     })\n       .then((db: SQLiteObject) => {\n         this.databaseObj = db;\n         this.createTable();\n       })\n       .catch(e => {\n         alert(\"error \" + JSON.stringify(e))\n       });\n }\n\n  createTable() {\n  this.databaseObj.executeSql('CREATE TABLE IF NOT EXISTS categoria (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT NOT NULL, sexo TEXT NOT NULL)', [])\n    .then(() => {\n      this.getAll();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n \n\nadd() {\n  if (!this.nome.length) {\n    alert(\"Entre com o nome da Categoria !\");\n    return;\n  }\n  if (!this.sexo.length) {\n    alert(\"Entre com o sexo da Categoria !\");\n    return;\n  }\n this.databaseObj.executeSql('INSERT INTO ' + this.table_name + ' (nome,sexo) VALUES (?,?)',[this.nome,this.sexo])\n    \n  .then(() => {\n      alert('Categoria Inserida !');\n      this.nome=\"\";\n      this.sexo=\"\";\n      this.getAll();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n   \n  }\n\n  getAll() {\n    this.databaseObj.executeSql(\"SELECT * FROM \" + this.table_name, [])\n      .then((res) => {\n        this.row_data = [];\n        if (res.rows.length > 0) {\n          for (var i = 0; i < res.rows.length; i++) {\n            this.row_data.push(res.rows.item(i));\n          }\n        }\n      })\n      .catch(e => {\n        alert(\"error \" + JSON.stringify(e))\n      });\n  }\n\n\ndelete(item) {\n  this.databaseObj.executeSql(\"DELETE FROM \" + this.table_name + \" WHERE id = \" + item.id, [])\n    .then((res) => {\n      alert(\"Categoria removida !\");\n      this.getAll();\n    })\n    .catch(e => {\n      alert(\"error \" + JSON.stringify(e))\n    });\n}\n\n  update() {\n      \n\n  }\n\n  /*async showToast(msg){\n    const toast = await this.toastController.create({\n      message: msg, \n      duration: 2000\n      });\n      toast.present(); \n  }\n  */\n\n  ngOnInit() {\n   this.createDB();    \n  }\n\n\n\n}\n"],"sourceRoot":""}